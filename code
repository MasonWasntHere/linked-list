class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insertAtBegin(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        else:
            new_node.next = self.head
            self.head = new_node

    def insertAtEnd(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return

        current_node = self.head
        while current_node.next:
            current_node = current_node.next

        current_node.next = new_node

    def convertListToLinkedList(self, data_list):
        for data in data_list:
            self.insertAtEnd(data)

my_list = ["Aidan", "Chris", "Gavin", "Jaiden", "Leo", "Mason", "Marcos", "Muntag", "Nate", "Shahood", "Ryan"]
linked_list = LinkedList()
linked_list.convertListToLinkedList(my_list)

current_node = linked_list.head
while current_node:
    print(current_node.data, end=" ")
    current_node = current_node.next
